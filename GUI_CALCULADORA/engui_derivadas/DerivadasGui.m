function DerivadasGui()
    fig = uifigure('Name', 'Calculadora de Derivadas', ...
                   'Position', [100, 100, 1280, 720], ...
                   'Color', [0.1, 0.1, 0.1]);

    % Barra superior azul y título
    uipanel(fig, 'Position', [0, 670, 1280, 50], ...
            'BackgroundColor', [0.22, 0.51, 0.78], 'BorderType', 'none');
    uilabel(fig, 'Text', 'CALCULADORA DE DERIVADAS', ...
        'Position', [0, 670, 1280, 50], ...
        'FontSize', 26, 'FontWeight', 'bold', ...
        'HorizontalAlignment', 'center', ...
        'BackgroundColor', 'none', ...
        'FontColor', 'white');

    % Panel de explicación
    panel_explicacion = uipanel(fig, 'Title', 'EXPLICACION DE LA FUNCION O METODO', ...
        'Position', [30, 600, 1220, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_explicacion = uitextarea(panel_explicacion, ...
        'Position', [10, 10, 1200, 30], ...
        'Editable', 'off', ...
        'FontSize', 12, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18], ...
        'Value', {'Seleccione el tipo de cálculo de derivada que desea realizar.'});

    % Panel de selección de opción
    panel_opciones = uipanel(fig, 'Title', 'OPCIONES', ...
        'Position', [30, 530, 400, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    opciones = {'Derivada numérica personalizada', ...
                'Tabla de derivadas comunes'};
    dropdown_opciones = uidropdown(panel_opciones, ...
        'Position', [20, 10, 360, 30], ...
        'Items', opciones, ...
        'FontSize', 13, ...
        'Value', opciones{1}, ...
        'BackgroundColor', [0.2, 0.2, 0.2], ...
        'FontColor', 'white', ...
        'ValueChangedFcn', @(src,evt) actualizar_campos());

    % Panel de ingreso de datos
    panel_datos = uipanel(fig, 'Title', 'INGRESO DE DATOS', ...
        'Position', [30, 300, 600, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    campos = {};

    btn_calcular = uibutton(panel_datos, 'Text', 'CALCULAR', ...
        'Position', [20, 10, 120, 30], ...
        'FontSize', 12, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.3, 0.7, 0.3], ...
        'FontColor', 'white', ...
        'ButtonPushedFcn', @(btn,event) calcular());

    % Panel de resultados
    panel_resultados = uipanel(fig, 'Title', 'RESULTADOS', ...
        'Position', [650, 300, 400, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_resultados = uitextarea(panel_resultados, ...
        'Position', [10, 10, 380, 170], ...
        'Editable', 'off', ...
        'FontSize', 13, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18]);

    % Panel de gráfica
    panel_grafica = uipanel(fig, 'Title', '', ...
        'Position', [30, 30, 1220, 250], ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    axes_grafica = uiaxes(panel_grafica, ...
        'Position', [40, 30, 1140, 190], ...
        'BackgroundColor', [0.18, 0.18, 0.18], ...
        'XColor', 'white', 'YColor', 'white', ...
        'FontSize', 13);
    text(axes_grafica, 0.5, 0.5, 'GRAFICA', ...
        'Units', 'normalized', ...
        'HorizontalAlignment', 'center', ...
        'FontSize', 20, 'Color', [1 1 1 0.2]);

    actualizar_campos();

    function actualizar_campos()
        if ~isempty(campos)
            for i = 1:length(campos)
                if isvalid(campos{i})
                    delete(campos{i});
                end
            end
        end
        campos = {};
        opcion = dropdown_opciones.Value;
        y = 160;
        dy = 40;

        switch opcion
            case 'Derivada numérica personalizada'
                campos{1} = uilabel(panel_datos, 'Text', 'Función f(x):', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'text', ...
                    'Position', [150, y, 300, 25], 'Value', 'sin(x)', ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{3} = uilabel(panel_datos, 'Text', 'Punto x0:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{4} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 100, 25], 'Value', 1, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{5} = uilabel(panel_datos, 'Text', 'Paso h (opcional):', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{6} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 100, 25], 'Value', 0.0001, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
            case 'Tabla de derivadas comunes'
                % No se requieren campos de ingreso
        end
    end

    function calcular()
        opcion = dropdown_opciones.Value;
        cla(axes_grafica);
        texto_resultados.Value = {''};

        switch opcion
            case 'Derivada numérica personalizada'
                expr = campos{2}.Value;
                x0 = campos{4}.Value;
                h = campos{6}.Value;
                try
                    func = str2func(['@(x) ' expr]);
                    func(1); % Validar función
                catch
                    texto_resultados.Value = {'Error: La función ingresada no es válida.'};
                    return;
                end
                [da, dc, de] = derivar_funcion(func, x0, h);
                texto_resultados.Value = {['Función: f(x) = ' expr], ...
                                         sprintf('Punto x0 = %.4f', x0), ...
                                         sprintf('Derivada adelante: %.6f', da), ...
                                         sprintf('Derivada centrada: %.6f', dc), ...
                                         sprintf('Derivada extrapolada: %.6f', de)};
                % Graficar función y derivada numérica
                x = linspace(x0-5, x0+5, 1000);
                y = arrayfun(func, x);
                plot(axes_grafica, x, y, 'b-', 'LineWidth', 1.5);
                hold(axes_grafica, 'on');
                plot(axes_grafica, x0, func(x0), 'ro', 'MarkerSize', 8, 'MarkerFaceColor', 'r');
                hold(axes_grafica, 'off');
                xlabel(axes_grafica, 'x');
                ylabel(axes_grafica, 'f(x)');
                title(axes_grafica, ['Función: f(x) = ' expr], 'Color', 'white');
                grid(axes_grafica, 'on');

            case 'Tabla de derivadas comunes'
                texto_resultados.Value = { ...
                    'FÓRMULAS BÁSICAS:', ...
                    'd/dx[c] = 0', ...
                    'd/dx[x^n] = n·x^(n-1)', ...
                    'd/dx[e^x] = e^x', ...
                    'd/dx[ln(x)] = 1/x', ...
                    'd/dx[sin(x)] = cos(x)', ...
                    'd/dx[cos(x)] = -sin(x)', ...
                    'd/dx[tan(x)] = sec^2(x)', ...
                    'REGLAS DE OPERACIÓN:', ...
                    'd/dx[f(x) + g(x)] = f''(x) + g''(x)', ...
                    'd/dx[f(x) - g(x)] = f''(x) - g''(x)', ...
                    'd/dx[c·f(x)] = c·f''(x)', ...
                    'd/dx[f(x)·g(x)] = f(x)·g''(x) + g(x)·f''(x)', ...
                    'd/dx[f(x)/g(x)] = [g(x)·f''(x) - f(x)·g''(x)]/[g(x)]^2', ...
                    'd/dx[f(g(x))] = f''(g(x))·g''(x)', ...
                    'DERIVADAS TRIGONOMÉTRICAS:', ...
                    'd/dx[sec(x)] = sec(x)·tan(x)', ...
                    'd/dx[csc(x)] = -csc(x)·cot(x)', ...
                    'd/dx[cot(x)] = -csc^2(x)', ...
                    'd/dx[arcsin(x)] = 1/sqrt(1-x^2)', ...
                    'd/dx[arccos(x)] = -1/sqrt(1-x^2)', ...
                    'd/dx[arctan(x)] = 1/(1+x^2)', ...
                    'DERIVADAS LOGARÍTMICAS Y EXPONENCIALES:', ...
                    'd/dx[log_a(x)] = 1/(x·ln(a))', ...
                    'd/dx[a^x] = a^x·ln(a)'};
                cla(axes_grafica);
        end
    end
end