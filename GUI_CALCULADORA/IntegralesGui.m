function IntegralesGui()
    fig = uifigure('Name', 'Calculadora de Integrales', ...
                   'Position', [100, 100, 1280, 720], ...
                   'Color', [0.1, 0.1, 0.1]);

    % Barra superior azul y título
    uipanel(fig, 'Position', [0, 670, 1280, 50], ...
            'BackgroundColor', [0.22, 0.51, 0.78], 'BorderType', 'none');
    uilabel(fig, 'Text', 'CALCULADORA DE INTEGRALES', ...
        'Position', [0, 670, 1280, 50], ...
        'FontSize', 26, 'FontWeight', 'bold', ...
        'HorizontalAlignment', 'center', ...
        'BackgroundColor', 'none', ...
        'FontColor', 'white');

    % Panel de explicación
    panel_explicacion = uipanel(fig, 'Title', 'EXPLICACION DE LA FUNCION O METODO', ...
        'Position', [30, 600, 1220, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_explicacion = uitextarea(panel_explicacion, ...
        'Position', [10, 10, 1200, 30], ...
        'Editable', 'off', ...
        'FontSize', 12, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18], ...
        'Value', {'Seleccione una opción para calcular integrales o consultar fórmulas.'});

    % Panel de selección de opción
    panel_opciones = uipanel(fig, 'Title', 'OPCIONES', ...
        'Position', [30, 530, 400, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    opciones = {'Ingresar función manual', ...
                'Mostrar fórmulas de integración'};
    dropdown_opciones = uidropdown(panel_opciones, ...
        'Position', [20, 10, 360, 30], ...
        'Items', opciones, ...
        'FontSize', 13, ...
        'Value', opciones{1}, ...
        'BackgroundColor', [0.2, 0.2, 0.2], ...
        'FontColor', 'white', ...
        'ValueChangedFcn', @(src,evt) actualizar_campos());

    % Panel de ingreso de datos
    panel_datos = uipanel(fig, 'Title', 'INGRESO DE DATOS', ...
        'Position', [30, 300, 600, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    campos = {};

    btn_calcular = uibutton(panel_datos, 'Text', 'CALCULAR', ...
        'Position', [20, 10, 120, 30], ...
        'FontSize', 12, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.3, 0.7, 0.3], ...
        'FontColor', 'white', ...
        'ButtonPushedFcn', @(btn,event) calcular());

    % Panel de resultados
    panel_resultados = uipanel(fig, 'Title', 'RESULTADOS', ...
        'Position', [650, 300, 570, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_resultados = uitextarea(panel_resultados, ...
        'Position', [10, 10, 550, 170], ...
        'Editable', 'off', ...
        'FontSize', 13, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18]);

    % Panel de gráfica
    panel_grafica = uipanel(fig, 'Title', '', ...
        'Position', [30, 30, 1220, 250], ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    axes_grafica = uiaxes(panel_grafica, ...
        'Position', [40, 30, 1140, 190], ...
        'BackgroundColor', [0.18, 0.18, 0.18], ...
        'XColor', 'white', 'YColor', 'white', ...
        'FontSize', 13);
    text(axes_grafica, 0.5, 0.5, 'GRAFICA', ...
        'Units', 'normalized', ...
        'HorizontalAlignment', 'center', ...
        'FontSize', 20, 'Color', [1 1 1 0.2]);

    actualizar_campos();

    function actualizar_campos()
        if ~isempty(campos)
            for i = 1:length(campos)
                if isvalid(campos{i})
                    delete(campos{i});
                end
            end
        end
        campos = {};
        opcion = dropdown_opciones.Value;
        y = 160;
        dy = 40;

        switch opcion
            case 'Ingresar función manual'
                campos{1} = uilabel(panel_datos, 'Text', 'Función f(x):', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'text', ...
                    'Position', [150, y, 300, 25], 'Value', 'sin(x)', ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{3} = uilabel(panel_datos, 'Text', 'Límite inferior:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{4} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 120, 25], 'Value', 0, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{5} = uilabel(panel_datos, 'Text', 'Límite superior:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{6} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 120, 25], 'Value', pi, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{7} = uilabel(panel_datos, 'Text', 'Método:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{8} = uidropdown(panel_datos, ...
                    'Items', {'Trapecio', 'Simpson', 'Rectángulos', 'Quad'}, ...
                    'Position', [150, y, 150, 25], ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
            case 'Mostrar fórmulas de integración'
                % No se requieren campos de ingreso
        end
        cla(axes_grafica);
        texto_resultados.Value = {''};
    end

    function calcular()
        opcion = dropdown_opciones.Value;
        cla(axes_grafica);
        texto_resultados.Value = {''};

        switch opcion
            case 'Ingresar función manual'
                expr = campos{2}.Value;
                a = campos{4}.Value;
                b = campos{6}.Value;
                metodo = lower(campos{8}.Value);
                try
                    func = str2func(['@(x) ' expr]);
                    func(1); % Validar función
                catch
                    texto_resultados.Value = {'Error: La función ingresada no es válida.'};
                    return;
                end
                switch metodo
                    case 'trapecio'
                        metodo_str = 'trapecio';
                    case 'simpson'
                        metodo_str = 'simpson';
                    case 'rectángulos'
                        metodo_str = 'rectangulos';
                    case 'quad'
                        metodo_str = 'quad';
                end
                try
                    tic;
                    resultado = calcular_integral_definida(func, a, b, metodo_str);
                    tiempo = toc;
                    texto_resultados.Value = {['Función: f(x) = ' expr], ...
                        ['Intervalo: [' num2str(a) ', ' num2str(b) ']'], ...
                        ['Método: ' metodo_str], ...
                        ['Resultado: ' num2str(resultado)], ...
                        ['Tiempo de cálculo: ' num2str(tiempo*1000) ' ms']};
                    % Graficar
                    x = linspace(a, b, 1000);
                    y = arrayfun(func, x);
                    plot(axes_grafica, x, y, 'b-', 'LineWidth', 2);
                    hold(axes_grafica, 'on');
                    area(axes_grafica, x, y, 'FaceAlpha', 0.2, 'EdgeColor', 'none', 'FaceColor', [0 1 0]);
                    hold(axes_grafica, 'off');
                    xlabel(axes_grafica, 'x');
                    ylabel(axes_grafica, 'f(x)');
                    title(axes_grafica, ['Integral de f(x) = ' expr], 'Color', 'white');
                    grid(axes_grafica, 'on');
                catch e
                    texto_resultados.Value = {['Error al calcular la integral: ' e.message]};
                end
            case 'Mostrar fórmulas de integración'
                texto_resultados.Value = { ...
                    'INTEGRALES BÁSICAS:', ...
                    '∫ k dx = k·x + C', ...
                    '∫ x^n dx = x^(n+1)/(n+1) + C (n ≠ -1)', ...
                    '∫ 1/x dx = ln|x| + C', ...
                    '∫ e^x dx = e^x + C', ...
                    '∫ a^x dx = a^x/ln(a) + C (a > 0, a ≠ 1)', ...
                    '∫ sin(x) dx = -cos(x) + C', ...
                    '∫ cos(x) dx = sin(x) + C', ...
                    '∫ tan(x) dx = ln|sec(x)| + C = -ln|cos(x)| + C', ...
                    '∫ sec(x) dx = ln|sec(x) + tan(x)| + C', ...
                    '∫ csc(x) dx = ln|csc(x) - cot(x)| + C', ...
                    '∫ cot(x) dx = ln|sin(x)| + C', ...
                    '∫ 1/(a^2 + x^2) dx = (1/a)·arctan(x/a) + C', ...
                    '∫ 1/√(a^2 - x^2) dx = arcsin(x/a) + C', ...
                    '∫ 1/(a^2 - x^2) dx = (1/2a)·ln|(a+x)/(a-x)| + C', ...
                    'PROPIEDADES BÁSICAS:', ...
                    '∫ [f(x) + g(x)] dx = ∫ f(x) dx + ∫ g(x) dx', ...
                    '∫ k·f(x) dx = k·∫ f(x) dx (k constante)', ...
                    'INTEGRACIÓN POR PARTES:', ...
                    '∫ u(x)·v''(x) dx = u(x)·v(x) - ∫ u''(x)·v(x) dx', ...
                    'MÉTODOS NUMÉRICOS:', ...
                    'Trapecio: ∫[a,b] f(x) dx ≈ (b-a)/2 · [f(a) + f(b)]', ...
                    'Simpson: ∫[a,b] f(x) dx ≈ (b-a)/6 · [f(a) + 4f((a+b)/2) + f(b)]' ...
                };
                cla(axes_grafica);
        end
    end
end