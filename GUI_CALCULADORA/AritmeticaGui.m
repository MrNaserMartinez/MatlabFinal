function AritmeticaGui()
    fig = uifigure('Name', 'Calculadora Aritmética', ...
                   'Position', [100, 100, 1280, 720], ...
                   'Color', [0.1, 0.1, 0.1]);

    % Barra superior azul y título
    uipanel(fig, 'Position', [0, 670, 1280, 50], ...
            'BackgroundColor', [0.22, 0.51, 0.78], 'BorderType', 'none');
    uilabel(fig, 'Text', 'CALCULADORA ARITMÉTICA', ...
        'Position', [0, 670, 1280, 50], ...
        'FontSize', 26, 'FontWeight', 'bold', ...
        'HorizontalAlignment', 'center', ...
        'BackgroundColor', 'none', ...
        'FontColor', 'white');

    % Panel de explicación
    panel_explicacion = uipanel(fig, 'Title', 'EXPLICACION DE LA FUNCION O METODO', ...
        'Position', [30, 600, 1220, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_explicacion = uitextarea(panel_explicacion, ...
        'Position', [10, 10, 1200, 30], ...
        'Editable', 'off', ...
        'FontSize', 12, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18], ...
        'Value', {'Seleccione la operación aritmética y los números para calcular.'});

    % Panel de selección de opción
    panel_opciones = uipanel(fig, 'Title', 'OPCIONES', ...
        'Position', [30, 530, 400, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    opciones = {'Suma', 'Resta', 'Multiplicación', 'División', 'Potencia'};
    dropdown_opciones = uidropdown(panel_opciones, ...
        'Position', [20, 10, 360, 30], ...
        'Items', opciones, ...
        'FontSize', 13, ...
        'Value', opciones{1}, ...
        'BackgroundColor', [0.2, 0.2, 0.2], ...
        'FontColor', 'white', ...
        'ValueChangedFcn', @(src,evt) actualizar_campos());

    % Panel de ingreso de datos
    panel_datos = uipanel(fig, 'Title', 'INGRESO DE DATOS', ...
        'Position', [30, 300, 600, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    campos = {};

    btn_calcular = uibutton(panel_datos, 'Text', 'CALCULAR', ...
        'Position', [20, 10, 120, 30], ...
        'FontSize', 12, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.3, 0.7, 0.3], ...
        'FontColor', 'white', ...
        'ButtonPushedFcn', @(btn,event) calcular());

    % Panel de resultados
    panel_resultados = uipanel(fig, 'Title', 'RESULTADOS', ...
        'Position', [650, 300, 570, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_resultados = uitextarea(panel_resultados, ...
        'Position', [10, 10, 550, 170], ...
        'Editable', 'off', ...
        'FontSize', 13, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18]);

    % Variables para mantener el estado
    numeros = [];
    resultado_actual = [];
    operacion_actual = opciones{1};

    actualizar_campos();

    function actualizar_campos()
        if ~isempty(campos)
            for i = 1:length(campos)
                if isvalid(campos{i})
                    delete(campos{i});
                end
            end
        end
        campos = {};
        operacion_actual = dropdown_opciones.Value;
        y = 160;
        dy = 40;

        switch operacion_actual
            case {'Suma', 'Resta', 'Multiplicación', 'División'}
                campos{1} = uilabel(panel_datos, 'Text', 'Primer número:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 120, 25], 'Value', 0, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{3} = uilabel(panel_datos, 'Text', 'Segundo número:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{4} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 120, 25], 'Value', 0, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
            case 'Potencia'
                campos{1} = uilabel(panel_datos, 'Text', 'Base:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 120, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{3} = uilabel(panel_datos, 'Text', 'Exponente:', ...
                    'Position', [20, y, 120, 25], 'FontColor', 'white');
                campos{4} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [150, y, 120, 25], 'Value', 3, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
        end
        numeros = [];
        resultado_actual = [];
        texto_resultados.Value = {''};
    end

    function calcular()
        operacion_actual = dropdown_opciones.Value;
        switch operacion_actual
            case 'Suma'
                numeros = [campos{2}.Value, campos{4}.Value];
                resultado_actual = sum(numeros);
                texto_resultados.Value = {['Suma: ' num2str(numeros(1)) ' + ' num2str(numeros(2)) ' = ' num2str(resultado_actual)]};
            case 'Resta'
                numeros = [campos{2}.Value, campos{4}.Value];
                resultado_actual = numeros(1) - numeros(2);
                texto_resultados.Value = {['Resta: ' num2str(numeros(1)) ' - ' num2str(numeros(2)) ' = ' num2str(resultado_actual)]};
            case 'Multiplicación'
                numeros = [campos{2}.Value, campos{4}.Value];
                resultado_actual = prod(numeros);
                texto_resultados.Value = {['Multiplicación: ' num2str(numeros(1)) ' * ' num2str(numeros(2)) ' = ' num2str(resultado_actual)]};
            case 'División'
                numeros = [campos{2}.Value, campos{4}.Value];
                if numeros(2) == 0
                    texto_resultados.Value = {'Error: No se puede dividir entre cero.'};
                    resultado_actual = [];
                else
                    resultado_actual = numeros(1) / numeros(2);
                    texto_resultados.Value = {['División: ' num2str(numeros(1)) ' / ' num2str(numeros(2)) ' = ' num2str(resultado_actual)]};
                end
            case 'Potencia'
                numeros = [campos{2}.Value, campos{4}.Value];
                resultado_actual = numeros(1) ^ numeros(2);
                texto_resultados.Value = {['Potencia: ' num2str(numeros(1)) ' ^ ' num2str(numeros(2)) ' = ' num2str(resultado_actual)]};
        end
    end

    function agregar_numero()
        if isempty(resultado_actual)
            calcular();
        end
        prompt = 'Ingrese el siguiente número a agregar:';
        dlg = uifigure('Name', 'Agregar número', 'Position', [600 400 350 120], 'Color', [0.15 0.15 0.15]);
        uilabel(dlg, 'Text', prompt, 'Position', [20 60 300 25], 'FontColor', 'white');
        numField = uieditfield(dlg, 'numeric', 'Position', [20 30 120 25], 'FontColor', 'white', 'BackgroundColor', [0.2 0.2 0.2]);
        uibutton(dlg, 'Text', 'Agregar', 'Position', [160 30 80 25], ...
            'ButtonPushedFcn', @(btn,event) agregarYcerrar());
        uiwait(dlg);

        function agregarYcerrar()
            nuevo = numField.Value;
            close(dlg);
            switch operacion_actual
                case 'Suma'
                    resultado_actual = resultado_actual + nuevo;
                    texto_resultados.Value = {['Nuevo resultado: ' num2str(resultado_actual)]};
                case 'Resta'
                    resultado_actual = resultado_actual - nuevo;
                    texto_resultados.Value = {['Nuevo resultado: ' num2str(resultado_actual)]};
                case 'Multiplicación'
                    resultado_actual = resultado_actual * nuevo;
                    texto_resultados.Value = {['Nuevo resultado: ' num2str(resultado_actual)]};
                case 'División'
                    if nuevo == 0
                        texto_resultados.Value = {'Error: No se puede dividir entre cero.'};
                    else
                        resultado_actual = resultado_actual / nuevo;
                        texto_resultados.Value = {['Nuevo resultado: ' num2str(resultado_actual)]};
                    end
                case 'Potencia'
                    resultado_actual = resultado_actual ^ nuevo;
                    texto_resultados.Value = {['Nuevo resultado: ' num2str(resultado_actual)]};
            end
        end
    end
end