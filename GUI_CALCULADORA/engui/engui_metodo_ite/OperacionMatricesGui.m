function OperacionMatricesGui()
    fig = uifigure('Name', 'Calculadora de Operaciones con Matrices', ...
                   'Position', [100, 100, 1280, 720], ...
                   'Color', [0.1, 0.1, 0.1]);

    % Barra superior azul y título
    uipanel(fig, 'Position', [0, 670, 1280, 50], ...
            'BackgroundColor', [0.22, 0.51, 0.78], 'BorderType', 'none');
    uilabel(fig, 'Text', 'CALCULADORA DE OPERACIONES CON MATRICES', ...
        'Position', [0, 670, 1280, 50], ...
        'FontSize', 26, 'FontWeight', 'bold', ...
        'HorizontalAlignment', 'center', ...
        'BackgroundColor', 'none', ...
        'FontColor', 'white');

    % Panel de explicación
    panel_explicacion = uipanel(fig, 'Title', 'EXPLICACION DE LA FUNCION O METODO', ...
        'Position', [30, 600, 1220, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_explicacion = uitextarea(panel_explicacion, ...
        'Position', [10, 10, 1200, 30], ...
        'Editable', 'off', ...
        'FontSize', 12, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18], ...
        'Value', {'Seleccione una operación y complete los datos para trabajar con matrices.'});

    % Panel de selección de opción
    panel_opciones = uipanel(fig, 'Title', 'OPCIONES', ...
        'Position', [30, 530, 400, 60], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    opciones = {'Suma de matrices', ...
                'Resta de matrices', ...
                'Multiplicación de matrices', ...
                'Multiplicación por escalar', ...
                'Determinante', ...
                'Matriz inversa', ...
                'Transpuesta', ...
                'Resolver sistema lineal'};
    dropdown_opciones = uidropdown(panel_opciones, ...
        'Position', [20, 10, 360, 30], ...
        'Items', opciones, ...
        'FontSize', 13, ...
        'Value', opciones{1}, ...
        'BackgroundColor', [0.2, 0.2, 0.2], ...
        'FontColor', 'white', ...
        'ValueChangedFcn', @(src,evt) actualizar_campos());

    % Panel de ingreso de datos
    panel_datos = uipanel(fig, 'Title', 'INGRESO DE DATOS', ...
        'Position', [30, 300, 600, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    campos = {};

    btn_calcular = uibutton(panel_datos, 'Text', 'CALCULAR', ...
        'Position', [20, 10, 120, 30], ...
        'FontSize', 12, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.3, 0.7, 0.3], ...
        'FontColor', 'white', ...
        'ButtonPushedFcn', @(btn,event) calcular());

    % Panel de resultados
    panel_resultados = uipanel(fig, 'Title', 'RESULTADOS', ...
        'Position', [650, 300, 570, 210], ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'BackgroundColor', [0.13, 0.13, 0.13], ...
        'ForegroundColor', [0.3, 0.6, 1]);
    texto_resultados = uitextarea(panel_resultados, ...
        'Position', [10, 10, 550, 170], ...
        'Editable', 'off', ...
        'FontSize', 13, ...
        'FontColor', 'white', ...
        'BackgroundColor', [0.18, 0.18, 0.18]);

    actualizar_campos();

    function actualizar_campos()
        if ~isempty(campos)
            for i = 1:length(campos)
                if isvalid(campos{i})
                    delete(campos{i});
                end
            end
        end
        campos = {};
        opcion = dropdown_opciones.Value;
        y = 160;
        dy = 40;

        switch opcion
            case {'Suma de matrices', 'Resta de matrices'}
                campos{1} = uilabel(panel_datos, 'Text', 'Filas:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [110, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                campos{3} = uilabel(panel_datos, 'Text', 'Columnas:', ...
                    'Position', [200, y, 80, 25], 'FontColor', 'white');
                campos{4} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [290, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{5} = uilabel(panel_datos, 'Text', 'Matriz A:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{6} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 40], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'1 2'; '3 4'});
                y = y - dy*1.5;
                campos{7} = uilabel(panel_datos, 'Text', 'Matriz B:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{8} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 40], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'5 6'; '7 8'});
            case 'Multiplicación de matrices'
                campos{1} = uilabel(panel_datos, 'Text', 'Filas A:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [110, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                campos{3} = uilabel(panel_datos, 'Text', 'Columnas A:', ...
                    'Position', [200, y, 90, 25], 'FontColor', 'white');
                campos{4} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [300, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{5} = uilabel(panel_datos, 'Text', 'Filas B:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{6} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [110, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                campos{7} = uilabel(panel_datos, 'Text', 'Columnas B:', ...
                    'Position', [200, y, 90, 25], 'FontColor', 'white');
                campos{8} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [300, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{9} = uilabel(panel_datos, 'Text', 'Matriz A:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{10} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 40], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'1 2'; '3 4'});
                y = y - dy*1.5;
                campos{11} = uilabel(panel_datos, 'Text', 'Matriz B:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{12} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 40], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'5 6'; '7 8'});
            case 'Multiplicación por escalar'
                campos{1} = uilabel(panel_datos, 'Text', 'Filas:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [110, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                campos{3} = uilabel(panel_datos, 'Text', 'Columnas:', ...
                    'Position', [200, y, 80, 25], 'FontColor', 'white');
                campos{4} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [290, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{5} = uilabel(panel_datos, 'Text', 'Escalar k:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{6} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [110, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{7} = uilabel(panel_datos, 'Text', 'Matriz A:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{8} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 40], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'1 2'; '3 4'});
            case {'Determinante', 'Matriz inversa', 'Transpuesta'}
                campos{1} = uilabel(panel_datos, 'Text', 'Tamaño (n):', ...
                    'Position', [20, y, 100, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [130, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{3} = uilabel(panel_datos, 'Text', 'Matriz:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{4} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 80], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'1 2'; '3 4'});
            case 'Resolver sistema lineal'
                campos{1} = uilabel(panel_datos, 'Text', 'Tamaño (n):', ...
                    'Position', [20, y, 100, 25], 'FontColor', 'white');
                campos{2} = uieditfield(panel_datos, 'numeric', ...
                    'Position', [130, y, 60, 25], 'Value', 2, ...
                    'FontColor', 'white', 'BackgroundColor', [0.2, 0.2, 0.2]);
                y = y - dy;
                campos{3} = uilabel(panel_datos, 'Text', 'Matriz A:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{4} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 40], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'1 2'; '3 4'});
                y = y - dy*1.5;
                campos{5} = uilabel(panel_datos, 'Text', 'Vector b:', ...
                    'Position', [20, y, 80, 25], 'FontColor', 'white');
                campos{6} = uitextarea(panel_datos, ...
                    'Position', [110, y, 240, 40], 'FontColor', 'white', ...
                    'BackgroundColor', [0.2, 0.2, 0.2], 'Value', {'5'; '6'});
        end
    end

    function calcular()
        opcion = dropdown_opciones.Value;
        texto_resultados.Value = {''};
        try
            switch opcion
                case 'Suma de matrices'
                    A = str2num(strjoin(campos{6}.Value));
                    B = str2num(strjoin(campos{8}.Value));
                    C = A + B;
                    texto_resultados.Value = {'Matriz A:', mat2str(A), 'Matriz B:', mat2str(B), ...
                        'A + B:', mat2str(C)};
                case 'Resta de matrices'
                    A = str2num(strjoin(campos{6}.Value));
                    B = str2num(strjoin(campos{8}.Value));
                    C = A - B;
                    texto_resultados.Value = {'Matriz A:', mat2str(A), 'Matriz B:', mat2str(B), ...
                        'A - B:', mat2str(C)};
                case 'Multiplicación de matrices'
                    A = str2num(strjoin(campos{10}.Value));
                    B = str2num(strjoin(campos{12}.Value));
                    C = A * B;
                    texto_resultados.Value = {'Matriz A:', mat2str(A), 'Matriz B:', mat2str(B), ...
                        'A * B:', mat2str(C)};
                case 'Multiplicación por escalar'
                    k = campos{6}.Value;
                    A = str2num(strjoin(campos{8}.Value));
                    C = k * A;
                    texto_resultados.Value = {['Escalar k = ' num2str(k)], 'Matriz A:', mat2str(A), ...
                        'k * A:', mat2str(C)};
                case 'Determinante'
                    A = str2num(strjoin(campos{4}.Value));
                    detA = det(A);
                    texto_resultados.Value = {'Matriz:', mat2str(A), ...
                        ['Determinante: ' num2str(detA)]};
                case 'Matriz inversa'
                    A = str2num(strjoin(campos{4}.Value));
                    if abs(det(A)) < 1e-10
                        texto_resultados.Value = {'Matriz:', mat2str(A), ...
                            'No es invertible (determinante cero)'};
                    else
                        invA = inv(A);
                        texto_resultados.Value = {'Matriz:', mat2str(A), ...
                            'Matriz inversa:', mat2str(invA)};
                    end
                case 'Transpuesta'
                    A = str2num(strjoin(campos{4}.Value));
                    AT = A';
                    texto_resultados.Value = {'Matriz:', mat2str(A), ...
                        'Transpuesta:', mat2str(AT)};
                case 'Resolver sistema lineal'
                    A = str2num(strjoin(campos{4}.Value));
                    case 'Resolver sistema lineal'
                    A = str2num(strjoin(campos{4}.Value));
                    b = str2num(strjoin(campos{6}.Value));
                    if size(A,1) ~= size(A,2)
                        texto_resultados.Value = {'La matriz A debe ser cuadrada.'};
                        return;
                    end
                    if size(b,1) ~= size(A,1)
                        texto_resultados.Value = {'El vector b debe tener el mismo número de filas que A.'};
                        return;
                    end
                    if abs(det(A)) < 1e-10
                        texto_resultados.Value = {'La matriz A no es invertible. No hay solución única.'};
                    else
                        x = A\b;
                        texto_resultados.Value = {'Matriz A:', mat2str(A), ...
                            'Vector b:', mat2str(b), ...
                            'Solución x:', mat2str(x')};
                    end
            end
        catch err
            texto_resultados.Value = {['Error: ' err.message]};
        end
    end
end