function calcular_raices_gui()
% CALCULADORA_RAICES_GUI Interfaz gráfica simple para calcular raíces
% Esta función crea una GUI básica para calcular raíces cuadradas y cúbicas

    % Crear la figura principal
    fig = figure('Name', 'Calculadora de Raíces', ...
                 'Position', [100, 100, 500, 400], ...
                 'Resize', 'off', ...
                 'Color', [0.94 0.94 0.94], ...
                 'MenuBar', 'none', ...
                 'ToolBar', 'none');
    
    % Título principal
    uicontrol('Style', 'text', ...
        'String', 'CALCULADORA DE RAÍCES', ...
        'Position', [50, 350, 400, 30], ...
        'FontSize', 16, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', [0.94 0.94 0.94], ...
        'ForegroundColor', [0.2 0.2 0.8]);
    
    % Etiqueta para ingresar número
    uicontrol('Style', 'text', ...
        'String', 'Ingrese el número:', ...
        'Position', [50, 300, 120, 25], ...
        'FontSize', 12, ...
        'BackgroundColor', [0.94 0.94 0.94], ...
        'HorizontalAlignment', 'left');
    
    % Campo de entrada para el número
    edit_numero = uicontrol('Style', 'edit', ...
        'Position', [180, 300, 150, 25], ...
        'FontSize', 12, ...
        'BackgroundColor', 'white', ...
        'HorizontalAlignment', 'center');
    
    % Botón para raíz cuadrada
    uicontrol('Style', 'pushbutton', ...
        'String', 'Calcular Raíz Cuadrada', ...
        'Position', [80, 240, 160, 40], ...
        'FontSize', 11, ...
        'BackgroundColor', [0.8 0.9 1.0], ...
        'Callback', @(src,evt) calcular_raiz_cuadrada());
    
    % Botón para raíz cúbica
    uicontrol('Style', 'pushbutton', ...
        'String', 'Calcular Raíz Cúbica', ...
        'Position', [260, 240, 160, 40], ...
        'FontSize', 11, ...
        'BackgroundColor', [0.8 1.0 0.8], ...
        'Callback', @(src,evt) calcular_raiz_cubica());
    
    % Área de resultados
    uicontrol('Style', 'text', ...
        'String', 'Resultado:', ...
        'Position', [50, 180, 80, 25], ...
        'FontSize', 12, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', [0.94 0.94 0.94], ...
        'HorizontalAlignment', 'left');
    
    % Campo de texto para mostrar el resultado
    text_resultado = uicontrol('Style', 'text', ...
        'String', '', ...
        'Position', [50, 120, 400, 50], ...
        'FontSize', 14, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', [1 1 0.9], ...
        'ForegroundColor', [0.8 0.2 0.2], ...
        'HorizontalAlignment', 'center');
    
    % Área para notas adicionales
    text_notas = uicontrol('Style', 'text', ...
        'String', '', ...
        'Position', [50, 70, 400, 40], ...
        'FontSize', 10, ...
        'BackgroundColor', [0.94 0.94 0.94], ...
        'ForegroundColor', [0.6 0.6 0.6], ...
        'HorizontalAlignment', 'center');
    
    % Botón para limpiar
    uicontrol('Style', 'pushbutton', ...
        'String', 'Limpiar', ...
        'Position', [120, 20, 100, 30], ...
        'FontSize', 10, ...
        'BackgroundColor', [1.0 0.9 0.8], ...
        'Callback', @(src,evt) limpiar_campos());
    
    % Botón para salir
    uicontrol('Style', 'pushbutton', ...
        'String', 'Salir', ...
        'Position', [280, 20, 100, 30], ...
        'FontSize', 10, ...
        'BackgroundColor', [1.0 0.8 0.8], ...
        'Callback', @(src,evt) close(fig));
    
    % --- Funciones internas ---
    function calcular_raiz_cuadrada()
        try
            numero_str = get(edit_numero, 'String');
            numero = str2double(numero_str);
            
            if isnan(numero)
                set(text_resultado, 'String', 'Error: Ingrese un número válido');
                set(text_notas, 'String', '');
                return;
            end
            
            resultado = raiz_cuadrada(numero);
            
            if imag(resultado) ~= 0
                resultado_str = sprintf('%.4f + %.4fi', real(resultado), imag(resultado));
                nota = 'Nota: La raíz de un número negativo es un número complejo.';
            else
                resultado_str = sprintf('%.4f', resultado);
                nota = '';
            end
            
            mensaje = sprintf('√%.2f = %s', numero, resultado_str);
            set(text_resultado, 'String', mensaje);
            set(text_notas, 'String', nota);
            
        catch ME
            set(text_resultado, 'String', 'Error en el cálculo');
            set(text_notas, 'String', ME.message);
        end
    end
    
    function calcular_raiz_cubica()
        try
            numero_str = get(edit_numero, 'String');
            numero = str2double(numero_str);
            
            if isnan(numero)
                set(text_resultado, 'String', 'Error: Ingrese un número válido');
                set(text_notas, 'String', '');
                return;
            end
            
            resultado = raiz_cubica(numero);
            resultado_str = sprintf('%.4f', resultado);
            
            mensaje = sprintf('∛%.2f = %s', numero, resultado_str);
            set(text_resultado, 'String', mensaje);
            set(text_notas, 'String', '');
            
        catch ME
            set(text_resultado, 'String', 'Error en el cálculo');
            set(text_notas, 'String', ME.message);
        end
    end
    
    function limpiar_campos()
        set(edit_numero, 'String', '');
        set(text_resultado, 'String', '');
        set(text_notas, 'String', '');
    end
end

% --- Funciones de cálculo ---
function resultado = raiz_cuadrada(numero)
% RAIZ_CUADRADA Calcula la raíz cuadrada de un número
    if numero < 0
        resultado = complex(0, sqrt(abs(numero)));
    else
        resultado = sqrt(numero);
    end
end

function resultado = raiz_cubica(numero)
% RAIZ_CUBICA Calcula la raíz cúbica de un número
    resultado = nthroot(numero, 3);
end